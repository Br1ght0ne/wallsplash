#!/bin/bash

#     wallsplash - set Unsplash images as wallpapers with colorscheme support
#     Copyright (C) 2017 Oleksii Filonenko <filalex77@gmail.com>
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program. If not, see <http://www.gnu.org/licenses/>.

VERSION="0.4"

usage() {
    echo "Usage: `basename $0` [OPTIONS]

Options:
    * wallpaper type:
        -r,--random
        -a,--daily
        -e,--weekly
        -f,--featured
        -q,--search     Get a photo from a search query
    * colorscheme options:
        -c,--colors     Set colorscheme with wal
    * file options:
        -s,--symlink    Create symlink to wallpaper
                        in /home/<USER>/.current_wallpaper

Example:
    wallsplash --featured -cs"
}

version() {
	echo "`basename $0` v${VERSION}"
}


DIR="/home/${USER}/.wallsplash"
SYMLINK_PATH="/home/${USER}/.current_wallpaper"

getopt --test > /dev/null
if [[ $? -ne 4 ]]; then
    echo "Iâ€™m sorry, `getopt --test` failed in this environment."
    exit 1
fi

OPTIONS=:raefcsvhq:
LONGOPTIONS=random,daily,weekly,featured,colors,symlink,version,help,search:

PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTIONS --name "$0" -- "$@")
if [[ $? -ne 0 ]]; then
    exit 2
fi
eval set -- "$PARSED"

while [[ $# -gt 1 ]]; do
    case "$1" in
        -r|--random)
            TYPE="random"
            OPT="-r"
            shift
            ;;
        -a|--daily)
            TYPE="daily"
            OPT="-a"
            shift
            ;;
        -e|--weekly)
            TYPE="weekly"
            OPT="-e"
            shift
            ;;
        -f|--featured)
            TYPE="featured"
            OPT="-f"
            shift
            ;;
        -c|--colors)
            SET_COMMAND="wal -i"
            shift
            ;;
        -s|--symlink)
            SYMLINK=y
            shift
            ;;
        -q|--search)
            SEARCH="$2"
            shift 2
            ;;
        -v|--version)
            version
            exit 0
            ;;
        -h|--help)
            usage
            exit 0
            ;;
    esac
done

if [ -z "${OPT}" -a -z "${SEARCH}" ]; then
    usage
    exit 1
fi

if [ -z "${SET_COMMAND}" ]; then
    SET_COMMAND="feh --bg-scale"
fi

# Create dir
if [ ! -d ${DIR} ]; then
    echo "Creating directory..."
    mkdir ${DIR}
fi
cd ${DIR}

# Get wallpaper
echo "Getting ${TYPE} wallpaper..."
unsplash-wallpaper -d ${DIR} ${OPT} ${SEARCH+-q} "${SEARCH}" &> /dev/null

# Set it
WP_PATH=`ls -t ${DIR}/wallpaper* | head -n 1`
echo "Setting it with `echo ${SET_COMMAND} | awk '{print $1}'`..."
wal -t -i ${WP_PATH} &> /dev/null

# Clean dir,cache
echo "Cleaning directory..."
for file in $(ls -t ${DIR}/wallpaper* | tail -n +2); do rm $file; done
echo "Cleaning wal cache..."
for file in $(ls -t /home/${USER}/.cache/wal/schemes/_home_${USER}_.wallsplash_wallpaper-* 2>/dev/null | tail -n +2); do rm $file; done

# Symlink
if [ ${SYMLINK} ]; then
    echo "Creating symlink in ${SYMLINK_PATH}..."
    ln -sf ${WP_PATH} ${SYMLINK_PATH}
fi

echo "Enjoy!"
